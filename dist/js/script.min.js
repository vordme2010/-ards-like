class e extends Modal{constructor(e){super(e),this.patientInputs=document.querySelector(".variable-inputs")}choseDoctor(){document.querySelector(".patient").appendChild(this.patientInputs),"cardiologist"===n.value?(this.patientInputs.innerHTML='<input class="modal-input сard-input pressure" placeholder="обычное давление">\n                                            <input class="modal-input сard-input body-mass-index" placeholder="индекс массы тела">\n                                            <input type="number" class="modal-input сard-input age" placeholder="возраст">\n                                            <div class="diseases-collection">\n                                                <span class="input-disease__wrapper">\n                                                    <input class="modal-input сard-input diseases" placeholder="перенесенные заболевания CCC">\n                                                    <i class="remove-diseases-icon fas fa-backspace"></i>\n                                                </span>\n                                                <button class="add-diseases-btn"> <i class="add-diseases-icon fas fa-plus"></i> </button>\n                                            </div>',this.addDiseases(),document.querySelector(".diseases-collection").addEventListener("click",e=>this.removeDiseases(e))):"dentist"===n.value?this.patientInputs.innerHTML=' <input type="date" class="modal-input сard-input last-visit" placeholder="дата последнего посещения">':"therapist"===n.value&&(this.patientInputs.innerHTML=' <input  type="number" class="modal-input сard-input age" placeholder="возраст">')}addDiseases(){document.querySelector(".add-diseases-btn").addEventListener("click",()=>{const e=document.querySelector(".diseases-collection"),s=document.createElement("span");s.classList.add("input-disease__wrapper"),s.innerHTML='\n                <input class="modal-input сard-input diseases" placeholder="перенесенные заболевания CCC">\n                <i class="remove-diseases-icon fas fa-backspace"></i>',e.appendChild(s),this.patientInputs.scrollTo({top:1e3,behavior:"smooth"})})}removeDiseases(e){let s=e.target;s.classList.contains("remove-diseases-icon")&&1<document.querySelectorAll(".input-disease__wrapper").length&&s.closest(".input-disease__wrapper").remove()}}let s=new e("card");const t=document.querySelector(".js-card-toggle-button");t.addEventListener("click",e=>{s.toggleModal(e,"card"),validator.emptyFieldsMessage.style.display="none",loginModal.inputsCollection.forEach(e=>{e.style.border="none",e.value="",e.selectedIndex=0}),document.querySelector(".variable-inputs").innerHTML=""});const a=document.querySelector(".js-card-modal-wrapper");a.addEventListener("click",e=>s.toggleModal(e,"card"));const n=document.querySelector(".js-doctor-select");n.addEventListener("change",s.choseDoctor.bind(s));
class s extends Modal{constructor(s){super(s)}}new s("full-visit-info");
class t extends Modal{constructor(t){super(t),this.token=void 0,this.root=document.querySelector(".root"),this.logoutBtn=document.querySelector(".logout-button"),this.filterWrapper=document.querySelector(".filter-bg-wrapper"),this.cardButton=document.querySelector(".card-button"),this.messageContainer=document.querySelector(".massage-container"),this.modalLoginWrapper=document.querySelector(".js-login-modal-wrapper"),this.inputLogin=document.querySelector(".modal-input-login"),this.loginBtn=document.querySelector(".js-login-toggle-button"),this.inputPassword=document.querySelector(".modal-input-password"),this.passwordIcon=document.querySelector(".toggle-password-icon"),this.authBtn=document.querySelector(".autorise-btn"),this.loginImput=document.querySelector(".modal-input-login"),this.validateLogin(this.authBtn,"click"),this.notRegistered=document.querySelector(".not-registered"),this.closeEye(),this.togglePassword(),this.logOut(),this.renderPage()}renderPage(){window.localStorage.getItem("token")&&(this.logoutBtn.style.display="inline-block",this.cardButton.style.display="inline-block",this.filterWrapper.style.display="block",this.root.style.display="flex",this.messageContainer.style.display="none",this.modalLoginWrapper.style.display="none",this.loginBtn.style.display="none")}getToken(){fetch("https://ajax.test-danit.com/api/v2/cards/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:""+this.inputLogin.value,password:""+this.inputPassword.value})}).then(t=>{if(200==t.status)return console.log(t.status),console.log("response"),t;throw new Error(t.status)}).then(t=>t.text()).then(t=>{this.token=t,window.localStorage.setItem("token",t=this.token),console.log(t),this.renderPage()}).catch(t=>{console.log(t+" - you aren't registered yet!"),this.notRegistered.style.display="block"})}validateLogin(t,e){t.addEventListener(e,()=>{this.inputLogin.style.border="none",this.inputPassword.style.border="none";const t=validator.validate(".modal-input-bracket",this.inputPassword);0==t.length?this.getToken():t.forEach(t=>{t.style.border="1px solid red"})})}logOut(){this.logoutBtn.addEventListener("click",()=>{window.localStorage.removeItem("token"),location.reload()})}closeEye(){this.loginBtn.addEventListener("click",()=>{this.modalElement.classList.contains("hidden")&&(this.passwordIcon.classList.remove("far","fa-eye"),this.passwordIcon.classList.add("fas","fa-eye-slash"),this.inputPassword.type="password")})}togglePassword(){this.passwordIcon.addEventListener("click",()=>{"password"===this.inputPassword.type?this.inputPassword.type="text":this.inputPassword.type="password",this.passwordIcon.classList.toggle("far"),this.passwordIcon.classList.toggle("fa-eye"),this.passwordIcon.classList.toggle("fas"),this.passwordIcon.classList.toggle("fa-eye-slash")})}}let e=new t("login");const o=document.querySelector(".login-button");o.addEventListener("click",t=>{e.toggleModal(t,"login"),validator.passwordInputBracket.style.display="none",validator.loginInputBracket.style.display="none"});const s=document.querySelector(".js-login-modal-wrapper");s.addEventListener("click",t=>e.toggleModal(t,"login"));
(async()=>{const a=document.querySelectorAll(".js-massage");await wait(5e3),a[0].classList.add("massage--active"),await wait(2e3),a[1].classList.add("massage--active")})();

function e(e,a){document.querySelector(e).classList.add(a)}document.addEventListener("DOMContentLoaded",async()=>{e(".js-logo","preloader__logo--active"),await wait(1e3),e(".js-preloader-title","preloader__title--active"),await wait(2e3),e(".js-preloader","preloader--disabled"),await wait(3e3),e(".js-preloader","preloader--none")});
new class{constructor(){this.token}getToken(t,a){fetch("https://ajax.test-danit.com/api/v2/cards/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:"eva.horbenko@gmail.com",password:"1980Eva2001"})}).then(t=>t.text()).then(t=>this.token=t)}postVisit(t){return fetch("https://ajax.test-danit.com/api/v2/cards",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer f7e2a9df-f237-496a-af79-90aad3d71daf"},body:JSON.stringify({doctor:t.doctor,doctorTitle:t.doctorTitle,firstName:t.firstName,fathersName:t.fathersName,lastName:t.lastName,purpose:t.purpose,description:t.description,urgency:t.urgency,status:t.status,unicValues:t.unicValues})}).then(t=>t.json())}delete(t){fetch("https://ajax.test-danit.com/api/v2/cards/"+t,{method:"DELETE",headers:{Authorization:"Bearer f7e2a9df-f237-496a-af79-90aad3d71daf"}})}putCurrentDoctor(t,a){return fetch("https://ajax.test-danit.com/api/v2/cards/"+t,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer f7e2a9df-f237-496a-af79-90aad3d71daf"},body:JSON.stringify({doctor:a.doctor,doctorTitle:a.doctorTitle,firstName:a.firstName,fathersName:a.fathersName,lastName:a.lastName,purpose:a.purpose,description:a.description,urgency:a.urgency,unicValues:a.unicValues,status:a.status})}).then(t=>t.json())}getAllVisits(){return fetch("https://ajax.test-danit.com/api/v2/cards",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer f7e2a9df-f237-496a-af79-90aad3d71daf"}}).then(t=>t.json())}getCurrenVisits(t){return fetch("https://ajax.test-danit.com/api/v2/cards/"+t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer f7e2a9df-f237-496a-af79-90aad3d71daf"}}).then(t=>t.json())}};
new class{constructor(){this.emptyFieldsMessage=document.querySelector(".empty-fields-message"),this.passwordInputBracket=document.querySelector(".password-input-bracket"),this.loginInputBracket=document.querySelector(".login-input-bracket")}validate(e,t){const s=document.querySelectorAll(e),l=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,n=[];for(let e=0;e<s.length;e++)s[e].addEventListener("focusin",()=>{s[e].style.border="none",loginModal.notRegistered.style.display="none",s[e]==t?this.passwordInputBracket.style.display="none":s[e]!=t&&(this.loginInputBracket.style.display="none")}),s[e].addEventListener("focusout",()=>{0==s[e].value||"choose"==s[e].value||s[e].value<0?(s[e].style.border="1px solid red",s[e]==t?(this.passwordInputBracket.style.display="block",this.passwordInputBracket.innerHTML="вы не ввели свой пароль !"):(this.loginInputBracket.style.display="block",this.loginInputBracket.innerHTML="вы не ввели свой логин !")):l.test(s[e].value)||0==s[e].value||s[e]==t||s[e]!=loginModal.inputLogin?(s[e].style.border="none",s[e]==t?this.passwordInputBracket.style.display="none":this.loginInputBracket.style.display="none"):(s[e].style.border="1px solid red",this.loginInputBracket.style.display="block",this.loginInputBracket.innerHTML="вы ввели логин неправильно!")}),0==s[e].value||"choose"==s[e].value?(this.emptyFieldsMessage.style.display="block",n.push(s[e]),s[e]==t?(this.passwordInputBracket.style.display="block",this.passwordInputBracket.innerHTML="вы не ввели свой пароль !"):(this.loginInputBracket.style.display="block",this.loginInputBracket.innerHTML="вы не ввели свой логин !")):"number"==s[e].type&&s[e].value<0?(n.push(s[e]),this.emptyFieldsMessage.style.display="block"):s[e]==t||l.test(s[e].value)||0!=s[e].value?l.test(s[e].value)||0==s[e].value||s[e]==t||s[e]!=loginModal.inputLogin||(s[e].style.border="1px solid red",n.push(s[e]),this.loginInputBracket.style.display="block",this.loginInputBracket.innerHTML="вы ввели логин неправильно!"):(s[e].style.border="1px solid red",n.push(s[e]),this.loginInputBracket.style.display="block",this.loginInputBracket.innerHTML="неправильный логин !");return n}};
(class extends Visit{});
(class extends Visit{});
(class extends Visit{});

const e=new class{constructor(){this.visitsList=[],this.addVisitBtn=document.querySelector(".add-visit-btn"),this.modalCardWrapper=document.querySelector(".js-card-modal-wrapper"),this.statusFilter=document.querySelector(".filter-status"),this.urgencyFilter=document.querySelector(".filter-urgency"),this.nameFilter=document.querySelector(".filter-name"),this.filters=document.querySelectorAll(".filter-area"),this.filterStatus(),this.filterUrgency(),this.filterName()}filter(){this.visitsList.forEach(e=>{var t,s,i;"choose"!=e.doctor&&(t=e.id.toString(),document.getElementById(t).style.display="block",e.status!=this.statusFilter.value&&"all"!=this.statusFilter.value?(s=e.id.toString(),document.getElementById(s).classList.add("filtered")):e.urgency!=this.urgencyFilter.value&&"all"!=this.urgencyFilter.value?(i=e.id.toString(),document.getElementById(i).classList.add("filtered")):-1==e.firstName.indexOf(this.nameFilter.value)&&0!=this.nameFilter.value?(i=e.id.toString(),document.getElementById(i).classList.add("filtered")):(e=e.id.toString(),document.getElementById(e).classList.remove("filtered")),document.getElementById(t).classList.contains("filtered")&&(document.getElementById(t).style.display="none"))})}filterStatus(){this.statusFilter.addEventListener("change",e=>{this.filter()})}filterUrgency(){this.urgencyFilter.addEventListener("change",()=>{this.filter()})}filterName(){this.nameFilter.addEventListener("input",()=>{this.filter()})}async getVisits(){(await server.getAllVisits()).forEach(e=>{this.renderVisit(e),this.visitsList.push(e)})}async addVisit(){const l=validator.validate(".сard-input");if(0==l.length){const l=document.querySelector(".js-doctor-select").value,n=document.querySelector(".js-first-name-input").value,c=n.slice(0,1).toUpperCase()+n.slice(1).toLowerCase(),d=document.querySelector(".js-father-name-input").value,u=d.slice(0,1).toUpperCase()+d.slice(1).toLowerCase(),m=document.querySelector(".js-last-name-input").value,h=m.slice(0,1).toUpperCase()+m.slice(1).toLowerCase(),v=document.querySelector(".js-purpose-input").value,f=document.querySelector(".js-description-input").value,p=document.querySelector(".js-urgency-input").value;let e={},t=null,s,i,r,a=null;if("therapist"===l)a="Терапевт",t=document.querySelector(".age").value,e.age=t;else if("dentist"===l)a="Стоматолог",s=document.querySelector(".last-visit").value,e.lastVisit=s;else if("cardiologist"===l){a="Кардиолог",t=document.querySelector(".age").value,i=document.querySelector(".pressure").value,r=document.querySelector(".body-mass-index").value;const l=[];document.querySelectorAll(".diseases").forEach(e=>l.push(e.value)),e={age:t,pressure:i,bodyMassIndex:r,diseases:l}}var o={doctor:l,doctorTitle:a,firstName:c,fathersName:u,lastName:h,purpose:v,description:f,urgency:p,status:"active",unicValues:e},o=await server.postVisit(o);this.renderVisit(o),this.visitsList.push(o),this.modalCardWrapper.classList.add("hidden")}else l.forEach(e=>{e.style.border="1px solid red"})}renderVisit(e){if("therapist"===e.doctor){const{doctor:t,doctorTitle:s,firstName:i,fathersName:r,lastName:a,purpose:l,description:o,urgency:n,id:c,status:d,unicValues:{age:u}}=e,m=new VisitTherapist(t,s,i,r,a,l,o,n,c,d,u);m.createVisit(),m.showFullInfo()}if("dentist"===e.doctor){const{doctor:h,doctorTitle:v,firstName:f,fathersName:p,lastName:y,purpose:g,urgency:L,description:S,id:V,status:q,unicValues:{lastVisit:E}}=e,w=new VisitDentist(h,v,f,p,y,g,S,L,V,q,E);w.createVisit(),w.showFullInfo()}if("cardiologist"===e.doctor){const{doctor:F,doctorTitle:N,firstName:C,fathersName:I,lastName:j,purpose:b,urgency:x,description:B,id:T,status:U,unicValues:{age:k,pressure:A,bodyMassIndex:D,diseases:M}}=e,O=new VisitCardiologist(F,N,C,I,j,b,B,x,T,U,k,A,D,M);O.createVisit(),O.showFullInfo()}}removeVisit(t,e){server.delete(t),this.visitsList.forEach(e=>{e.id===t&&this.visitsList.splice(this.visitsList.indexOf(e),1)}),e.remove()}async saveChanges(t,s,e){await server.putCurrentDoctor(t.id,t),this.visitsList.forEach(e=>{e.id===s&&this.visitsList.splice(this.visitsList.indexOf(e),1,t)}),e.remove(),this.renderVisit(t)}async checkVisitAsDone(t,e){let s=await server.getCurrenVisits(t);e.classList.remove(s.status),s.status="done",e.classList.add(s.status),await server.putCurrentDoctor(t,s),this.visitsList.forEach(e=>{e.id===t&&this.visitsList.splice(this.visitsList.indexOf(e),1,s)})}};e.getVisits();const t=document.querySelector(".add-visit-btn");t.addEventListener("click",e.addVisit.bind(e));const s=document.querySelector(".js-full-visit-info-modal-wrapper");s.addEventListener("click",e=>fullVisitInfoModal.toggleModal(e,"full-visit-info"));
